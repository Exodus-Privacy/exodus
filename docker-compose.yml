version: "3"
services:

  amqp:
    image: rabbitmq:3.7-alpine
    networks:
      backend:
        aliases:
            - amqp
    ports:
      - "5672:5672"

  db:
    environment:
      POSTGRES_USER: exodus
      POSTGRES_PASSWORD: exodus
      POSTGRES_DB: exodus
      PGDATA: /var/lib/postgresql/data/pgdata
    image: postgres:11
    restart: always
    networks:
      backend:
        aliases:
            - db
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data/pgdata

  exodus-front:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    depends_on:
      - minio
      - db
      - amqp
      - exodus-worker
    env_file: .env
    networks:
      backend:
        aliases:
            - exodus
    ports:
      - "80:8000"
    user: ${uid?'echo uid=$(id -u) >> .env'}
    volumes:
      - ./exodus:/exodus/exodus:rw,cached

  exodus-worker:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    command: [ "start-worker" ]
    depends_on:
      - minio
      - db
      - amqp
    env_file: .env
    networks:
      backend:
        aliases:
            - exodus-worker
    user: ${uid?'echo uid=$(id -u) >> .env'}
    volumes:
      - ./exodus:/exodus/exodus:rw,cached

  minio:
    command: ["minio", "server", "/data"]
    environment:
      MINIO_ACCESS_KEY: exodusexodus
      MINIO_SECRET_KEY: exodusexodus
    image: minio/minio:RELEASE.2019-10-12T01-39-57Z
    networks:
      backend:
        aliases:
            - minio
    ports:
      - "9000:9000"
    volumes:
      - minio:/data

networks:
  backend:

volumes:
  minio:
  db:
