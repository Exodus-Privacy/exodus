version: "3"
services:

  amqp:
    image: rabbitmq:3.8.9-alpine
    networks:
      backend:
        aliases:
            - amqp

  db:
    environment:
      POSTGRES_USER: exodus
      POSTGRES_PASSWORD: exodus
      POSTGRES_DB: exodus
      PGDATA: /var/lib/postgresql/data/pgdata
    image: postgres:11
    restart: always
    networks:
      backend:
        aliases:
            - db
    volumes:
      - db:/var/lib/postgresql/data/pgdata

  exodus-front:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    depends_on:
      - minio
      - db
      - amqp
      - exodus-worker
    env_file: .env
    environment:
      DEBUG: 'False'
      USE_WHITENOISE: 'True'
    networks:
      backend:
        aliases:
            - exodus
    ports:
      - "8088:8000"
    user: ${uid}
    volumes:
      - ./exodus:/exodus/exodus:rw,cached

  exodus-worker:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
    command: [ "start-worker" ]
    depends_on:
      - minio
      - db
      - amqp
    env_file: .env
    environment:
      DEBUG: 'False'
      USE_WHITENOISE: 'True'
    networks:
      backend:
        aliases:
            - exodus-worker
    user: ${uid}
    volumes:
      - ./exodus:/exodus/exodus:rw,cached

  minio:
    command: ["minio", "server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: exodusexodus
      MINIO_ROOT_PASSWORD: exodusexodus
    image: minio/minio:RELEASE.2022-03-14T18-25-24Z
    networks:
      backend:
        aliases:
            - minio
    volumes:
      - minio:/data

networks:
  backend:

volumes:
  minio:
  db:
