---
name: CI

on:
  push:
    branches:
      - v1
  pull_request:
    branches:
      - v1
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: exodus
          POSTGRES_PASSWORD: exodus
          POSTGRES_BD: exodus
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dexdump
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv sync --dev --system
      - name: Lint with flake8
        run: |
          flake8 exodus/
      - name: Check if lock is uptodate
        run: |
          pipenv install --deploy
      - name: Check vulnerabilites in dependencies
        run: |
          pipenv check
        continue-on-error: true
      - name: Run tests
        run: |
          cd exodus
          python manage.py test
        env:
          DJANGO_SETTINGS_MODULE: exodus.settings.dev

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v2.1.0
        with:
          dockerfile: docker/Dockerfile

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
